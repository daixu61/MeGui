<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gradientPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAF0AAAA8CAMAAAAzB0YOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAwBQTFRFi6jO1eul
        6vXSwOF4UXy2xdPmq9hMF1Ge////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAi6l0qwAAA05JREFUWEe1WIly
        xSAI9Mjh/39xwQMBUeO8qTPty0vNui4LmLp0PkLwMYQvz7kvk8Sc+NTh9wscoxM4rLGFP0Xn4M+z2/gn
        dB+aCqHJUj534uzRIYQFCYgGL9E5eUumLXpni/BSGFIeXAQ2GnXaoXMpfFLCVHS6O8Dv0IUSI3fYT1i4
        aIcupPBJ6w5qyEhIeTboEi0O6H6IhFBng66EDup7HCOBsadxhB618EHpgipxbY7QtScNE5W8aGMXVREz
        pNUtEtEwKrvw6yd0DyOIMFZWFRFkSkOUATzfr2PKvViRh409RtVdO3Tg7m6H45ZObY+BCcsl6jAOA11w
        d28Zl3yU9IRFoYj4SS8ydBeeufboqyquy5pyZOP+CgxZGRfwI3mRTTtldu1nUfFTchNl5lVVLyccr4q8
        I2VU8a/w28Ys+5VamtCVZzBTotVuLKUwtPgzUCF01/6E9r+uCzJAAuX77qp5cd84pc3Btg6JDS04+ifn
        eBldmXqjxQFTgCfyXZ37Xrgq6cmtxgJcd62iShg6xTrc+96prYSfbYu6FQjuWXeOURDaFjmeui5TTOOL
        qCrmHT4swN+sn10SSBlkaWHkjY97UtpYdR4s1D0zwciKrahn5a1KDF2Kcbd0AVjY+Jo6zjBaFHYppnvH
        ACt3tkC+f+tk3u5lx6jHeurMy9nosNWbfM/RXeq2T6mXKKKOPu9H2WBxLw4m9ow7pGO7DXJQfvUjU05S
        CrFnuqtqyUoz6wHE3aVgcC8lgNpm584m5ylsMVZHGTrj3pSpPbWhe6YMKV2UsdCZSKCMwb209gg9Pj4+
        dvSXOwOiesS9252fCERvkn6nxbhnYFUW1c7dTFWo97y+i4w84j5FJ7VVSk50t6M6nOJLmLnfJTyhQ3nb
        esY8rWp0Xq0+cOcJYhdJ2bV7/r9n3CdnbVHfwaqk64nfS/4bhz7gDgcAqIl0JrjKhqE2l/ug+w2/L5x3
        Q3XLFw6LOjDDq+uqR4DxbdY8v98wakM9/IBzB458ZoZzx/zNxj8f/8WzILB+9zDfCA62M0OvleMAyZq6
        Qd8fUpfrz9BL/GXFO9/IVHeUBt74zhH5EwvP+PIvjV/wl+/aWZ5ffLNH/0X7Pfq/cceXiZ/i+gcXDZWs
        y5kvlAAAAABJRU5ErkJggg==
</value>
  </data>
</root>